def encrypt(plain_integers: list, pks: list) -> list:
    '''
    encrypt plain_integers
    '''

    e, n = pks

    return [pow(i, e, n) for i in plain_integers]

#------------------------------------辞書定義--------------------------------#
#小文字(a-z:0-25) 大文字26-51(A-Z:26-51) 数字(0-10:52-61)
ASPe = {'a':0, 'b':1, 'c':2, 'd':3, 'e':4, 'f':5, 'g':6, 'h':7, 'i':8, 'j':9, 'k':10, 'l':11, 'm':12, 'n':13, 'o':14, 'p':15, 'q':16, 'r':17, 's':18, 't':19, 'u':20, 'v':21, 'w':22, 'x':23, 'y':24, 'z':25, 'A':26, 'B':27, 'C':28, 'D':29, 'E':30, 'F':31, 'G':32, 'H':33, 'I':34, 'J':35, 'K':36, 'L':37, 'M':38, 'N':39, 'O':40, 'P':41, 'Q':42, 'R':43, 'S':44, 'T':45, 'U':46, 'V':47, 'W':48, 'X':49, 'Y':50, 'Z':51, '0':52, '1':53, '2':54, '3':55, '4':56, '5':57, '6':58, '7':59, '8':60, '9':61, 'あ':62, 'い':63, 'う':64, 'え':65, 'お':66, 'か':67, 'が':68, 'き':69, 'ぎ':70, 'く':71, 'ぐ':72, 'け':73, 'げ':74, 'こ':75, 'ご':76, 'さ':77, 'ざ':78, 'し':79, 'じ':80, 'す':81, 'ず':82, 'せ':83, 'ぜ':84, 'そ':85, 'ぞ':86, 'た':87, 'だ':88, 'ち':89, 'ぢ':90, 'っ':91, 'つ':92, 'づ':93, 'て':94, 'で':95, 'と':96, 'ど':97, 'な':98, 'に':99, 'ぬ':100, 'ね':101, 'の':102, 'は':103, 'ば':104, 'ぱ':105, 'ひ':106, 'び':107, 'ぴ':108, 'ふ':109, 'ぶ':110, 'ぷ':111, 'へ':112, 'べ':113, 'ぺ':114, 'ほ':115, 'ぼ':116, 'ぽ':117, 'ま':118, 'み':119, 'む':120, 'め':121, 'も':122, 'や':123, 'ゆ':124, 'よ':125, 'ら':126, 'り':127, 'る':128, 'れ':129, 'ろ':130, 'わ':131, 'を':132, 'ん':133,}

#逆探索用小文字(0-25:a-z) 大文字(26-51:A-Z) 数字(52-61:0-10)
ASPd ={'0':'a', '1':'b', '2':'c', '3':'d', '4':'e', '5':'f', '6':'g', '7':'h', '8':'i', '9':'j', '10':'k', '11':'l', '12':'m', '13':'n', '14':'o', '15':'p', '16':'q', '17':'r', '18':'s', '19':'t', '20':'u', '21':'v', '22':'w', '23':'x', '24':'y', '25':'z', '26':'A', '27':'B', '28':'C', '29':'D', '30':'E', '31':'F', '32':'G', '33':'H', '34':'I', '35':'J', '36':'K', '37':'L', '38':'M', '39':'N', '40':'O', '41':'P', '42':'Q', '43':'R', '44':'S', '45':'T', '46':'U', '47':'V', '48':'W', '49':'X', '50':'Y', '51':'Z', '52':'0', '53':'1', '54':'2', '55':'3', '56':'4', '57':'5', '58':'6', '59':'7', '60':'8', '61':'9', '62':'あ', '63':'い', '64':'う', '65':'え', '66':'お', '67':'か', '68':'が', '69':'き', '70':'ぎ', '71':'く', '72':'ぐ', '73':'け', '74':'げ', '75':'こ', '76':'ご', '77':'さ', '78':'ざ', '79':'し', '80':'じ', '81':'す', '82':'ず', '83':'せ', '84':'ぜ', '85':'そ', '86':'ぞ', '87':'た', '88':'だ', '89':'ち', '90':'ぢ', '91':'っ', '92':'つ', '93':'づ', '94':'て', '95':'で', '96':'と', '97':'ど', '98':'な', '99':'に', '100':'ぬ', '101':'ね', '102':'の', '103':'は', '104':'ば', '105':'ぱ', '106':'ひ', '107':'び', '108':'ぴ', '109':'ふ', '110':'ぶ', '111':'ぷ', '112':'へ', '113':'べ', '114':'ぺ', '115':'ほ', '116':'ぼ', '117':'ぽ', '118':'ま', '119':'み', '120':'む', '121':'め', '122':'も', '123':'や', '124':'ゆ', '125':'よ', '126':'ら', '127':'り', '128':'る', '129':'れ', '130':'ろ', '131':'わ', '132':'を','133':'ん',}
#------------------------------------------------------------------------------#


#------------------------------ (10-62)進数変換 -------------------------------#
#10→62進数変換
def encode62(n):
    if (int(n/62)):
        return encode62(int(n/62)) + ASPd[str(n%62)]
    return ASPd[str(n%62)]

#62→10進数に変換
def decode62(s):
    x = 0
    for i in range(1,len(str(s))+1):
        x += int(ASPe[s[-i]])*(62**(i-1))
    return x
#------------------------------------------------------------------------------#


#----------------- 暗号処理 -------------------#
#str型の文字をASP(数)に変換する関数
def str_to_ASP(s):
    return ASPe[s]

#平文を入力しASP変換し(文字 → 数字)、list型にしたものを出力
def list_encode134(s: str):
    return list(map(str_to_ASP, s))

#RSA変換でlistで帰ってくる

#list型10進数暗号文を62進数(文字のASC)表記
def list_encode_base62(l):
    return "/".join(list(map(encode62, l)))
#-----------------------------------------------#
